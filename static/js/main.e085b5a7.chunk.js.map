{"version":3,"sources":["context.js","TodoItem.js","TodoList.js","AddTodo.js","App.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","input","margin","TodoItem","props","removeTodo","useContext","classes","todo","completed","push","style","className","join","type","onChange","id","checked","title","onClick","TodoList","todos","map","item","onToggle","AddTodo","useState","value","setValue","bind","event","target","clear","useInputValue","onSubmit","preventDefault","trim","onCreate","App","setTodos","Provider","filter","concat","Date","now","length","ReactDOM","render","document","getElementById"],"mappings":"8LAGMA,EAAUC,IAAMC,cAAc,I,OCG9BC,EAAS,CACdC,GAAI,CACHC,QAAS,OACTC,eAAgB,iBAGjBC,MAAO,CACNF,QAAS,cACTG,OAAQ,cAIV,SAASC,EAASC,GAAQ,IACjBC,EAAeC,qBAAWZ,GAA1BW,WACFE,EAAU,GAMhB,OAJIH,EAAMI,KAAKC,WACdF,EAAQG,KAAK,aAIb,qBAAIC,MAAOd,EAAOC,GAAIc,UAAU,YAAhC,UACC,sBAAKA,UAAWL,EAAQM,KAAK,IAA7B,UACC,uBACCC,KAAK,WACLH,MAAOd,EAAOI,MACdc,SAAU,kBAAMX,EAAMW,SAASX,EAAMI,KAAKQ,KAC1CC,QAASb,EAAMI,KAAKC,YAErB,+BAAQL,EAAMI,KAAKU,WAEpB,wBAAQN,UAAU,gBAAgBO,QAAS,kBAAMd,EAAWD,EAAMI,KAAKQ,KAAvE,qBC/BH,SAASI,EAAShB,GAEjB,OACC,oBAAIQ,UAAU,YAAd,SACER,EAAMiB,MAAMC,KAAI,SAAAC,GAChB,OAAO,cAACpB,EAAD,CAENK,KAAMe,EACNR,SAAUX,EAAMoB,UAFXD,EAAKP,S,WCOf,SAASS,EAAQrB,GAEhB,IAAMH,EAhBP,WAA2C,IAAD,EACfyB,mBAAS,IADM,mBAClCC,EADkC,KAC3BC,EAD2B,KAGzC,MAAO,CACNC,KAAM,CACLF,MAAOA,EACPZ,SAAU,SAAAe,GAAK,OAAIF,EAASE,EAAMC,OAAOJ,SAE1CK,MAAO,kBAAMJ,EAAS,KACtBD,MAAO,kBAAMA,IAOAM,GAUd,OACC,sBAAMC,SATP,SAAuBJ,GACtBA,EAAMK,iBACFlC,EAAM0B,QAAQS,SACjBhC,EAAMiC,SAASpC,EAAM0B,SACrB1B,EAAM+B,MAAM,MAKb,SACC,mCAAOlB,KAAK,QAAWb,EAAM4B,SC1BhC,SAASS,IAAO,IAAD,EACY3C,IAAM+B,SAAS,IAD3B,mBACPL,EADO,KACAkB,EADA,KAkCd,OACC,cAAC7C,EAAQ8C,SAAT,CAAkBb,MAAO,CAAEtB,WAf5B,SAAoBW,GACnBuB,EAASlB,EAAMoB,QAAO,SAAAjC,GAAI,OAAIA,EAAKQ,KAAOA,QAc1C,SACC,sBAAKJ,UAAU,UAAf,UACC,cAACa,EAAD,CAASY,SAbZ,SAAiBnB,GAChBqB,EAASlB,EAAMqB,OAAO,CAAC,CACtBxB,MAAOA,EACPF,GAAI2B,KAAKC,MACTnC,WAAW,SAUV,iDACCY,EAAMwB,OAAS,cAACzB,EAAD,CAAUC,MAAOA,EAAOG,SA7B3C,SAAoBR,GACnBuB,EAASlB,EAAMC,KAAI,SAAAd,GAIlB,OAHIA,EAAKQ,KAAOA,IACfR,EAAKC,WAAaD,EAAKC,WAEjBD,SAwB6D,6D,MCrCvEsC,IAASC,OACR,cAACT,EAAD,IACAU,SAASC,eAAe,W","file":"static/js/main.e085b5a7.chunk.js","sourcesContent":["import React from 'react';\r\nexport { Context };\r\n\r\nconst Context = React.createContext('');","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Context } from './context';\r\n\r\nexport { TodoItem };\r\n\r\nconst styles = {\r\n\tli: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\r\n\t},\r\n\tinput: {\r\n\t\tdisplay: 'inlineBlock',\r\n\t\tmargin: '0 5px 0 0',\r\n\t}\r\n};\r\n\r\nfunction TodoItem(props) {\r\n\tconst { removeTodo } = useContext(Context);\r\n\tconst classes = [];\r\n\r\n\tif (props.todo.completed) {\r\n\t\tclasses.push('completed');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li style={styles.li} className=\"todo-item\">\r\n\t\t\t<div className={classes.join('')}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tonChange={() => props.onChange(props.todo.id)}\r\n\t\t\t\t\tchecked={props.todo.completed}\r\n\t\t\t\t/>\r\n\t\t\t\t<span >{props.todo.title}</span>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"button-remove\" onClick={() => removeTodo(props.todo.id)}>&times;</button>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nTodoItem.propTypes = {\r\n\ttodo: PropTypes.object.isRequired,\r\n\tonChange: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TodoItem } from './TodoItem';\r\n\r\nexport { TodoList };\r\n\r\nfunction TodoList(props) {\r\n\r\n\treturn (\r\n\t\t<ul className=\"todo-list\">\r\n\t\t\t{props.todos.map(item => {\r\n\t\t\t\treturn <TodoItem\r\n\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\ttodo={item}\r\n\t\t\t\t\tonChange={props.onToggle} />;\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t);\r\n\r\n}\r\n\r\nTodoList.propTypes = {\r\n\ttodos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\tonToggle: PropTypes.func.isRequired,\r\n}","import React, { useState } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nexport { AddTodo };\r\n\r\nfunction useInputValue(defaultValue = '') {\r\n\tconst [value, setValue] = useState('');\r\n\r\n\treturn {\r\n\t\tbind: {\r\n\t\t\tvalue: value,\r\n\t\t\tonChange: event => setValue(event.target.value),\r\n\t\t},\r\n\t\tclear: () => setValue(''),\r\n\t\tvalue: () => value,\r\n\r\n\t}\r\n}\r\n\r\nfunction AddTodo(props) {\r\n\r\n\tconst input = useInputValue('');\r\n\r\n\tfunction submitHandler(event) {\r\n\t\tevent.preventDefault();\r\n\t\tif (input.value().trim()) {\r\n\t\t\tprops.onCreate(input.value());\r\n\t\t\tinput.clear('');\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<input type=\"text\" {...input.bind} />\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nAddTodo.propTypes = {\r\n\tonCreate: PropTypes.func.isRequired,\r\n}","import React, { useEffect } from 'react';\r\nimport { TodoList } from './TodoList';\r\nimport { Context } from './context';\r\nimport { AddTodo } from './AddTodo';\r\n\r\nexport { App };\r\n\r\nfunction App() {\r\n\tconst [todos, setTodos] = React.useState([]);\r\n\r\n\t// useEffect(() => {\r\n\t// \tfetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\r\n\t// \t\t.then(response => response.json())\r\n\t// \t\t.then(todos => setTodos(todos))\r\n\t// \t\t.catch(err => console.error(err))\r\n\t// }, []);\r\n\r\n\tfunction toggleTodo(id) {\r\n\t\tsetTodos(todos.map(todo => {\r\n\t\t\tif (todo.id === id) {\r\n\t\t\t\ttodo.completed = !todo.completed;\r\n\t\t\t}\r\n\t\t\treturn todo;\r\n\t\t}));\r\n\r\n\t}\r\n\r\n\tfunction removeTodo(id) {\r\n\t\tsetTodos(todos.filter(todo => todo.id !== id));\r\n\t}\r\n\r\n\tfunction addTodo(title) {\r\n\t\tsetTodos(todos.concat([{\r\n\t\t\ttitle: title,\r\n\t\t\tid: Date.now(),\r\n\t\t\tcompleted: false,\r\n\t\t}]));\r\n\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Context.Provider value={{ removeTodo: removeTodo }}>\r\n\t\t\t<div className='wrapper'>\r\n\t\t\t\t<AddTodo onCreate={addTodo} />\r\n\t\t\t\t<h2>Your Todo list.</h2>\r\n\t\t\t\t{todos.length ? <TodoList todos={todos} onToggle={toggleTodo} /> : <p>You have not any todos.</p>}\r\n\t\t\t</div>\r\n\t\t</Context.Provider>\r\n\t);\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.css';\n\n\n\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n\n"],"sourceRoot":""}